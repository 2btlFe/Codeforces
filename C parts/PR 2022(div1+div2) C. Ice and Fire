/*
PR 2022(div1+div2) C. Ice and Fire
Algorithm: dp
TC: O(N)
SC: O(1)
Explaination:
마지막부터 연속된 숫자의 개수를 센다
만약 연속된 숫자의 개수가 총 길이와 같다면 1
아니라면, 길이 - 연속된 숫자의 개수가 된다.

이런 문제 유형이 많이 나오고 있다
뒤에서부터 연속된 숫자의 개수로 dp를 만들어서 푼다 
*/

#include <bits/stdc++.h>
#define ll long long
#define endl "\n"
#define all(x) x.begin(), x.end()
#define len(x) x.size()
 
using namespace std;

void solve() {
    int n; cin >> n;
    string s; cin >> s;
    
    //i = 1
    int cnt = 1;
    cout << 1 << " ";
    for(int i = 1; i < n-1; i++) {
        //
        if(s[i] == s[i-1]) {
            cnt++;
        } else {
            cnt = 1;
        }
        
        if(cnt == i+1) {
            cout << 1 << " ";
        } else {
            cout << i + 2 - cnt << " ";
        }
          
        
    }
    cout << endl;
}
 
int main() {
    int t; cin >> t;
    while(t--) {
        solve();
    }
}
